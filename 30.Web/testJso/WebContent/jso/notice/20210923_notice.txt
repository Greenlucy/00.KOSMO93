공지사항 :: MODEL 2 + Web MVC 패턴
==================================

0.datasource : 데이터 소스 : 데이터베이스 연결정보
--------------------------------
데이터베이스 : Oracle 11g 2 Release
jdbc Driver : ojdbc6.jar 	/Context/WeContent/WEB-INF/lib/ojdbc6.jar
sid : orclKOSMO00
account : jso00/jso1234
url : jdbc:orcl:thin:@localhost:1521:orclKOSMO00
jdbc Driver 네임스페이스 : oracle.jdbc.driver.OracleDriver

sqlplus /as sysdba 또는 sqlplus "/as sysdba"		(os 버전에 따라 안 되는 것이 있을 수 있으므로 후자 추천)
SELECT NAME, DB_UNIQUE_NAME FROM V$DATABASE;

1. 요구사항
관리자만 사용
공지사항의 종류에 따라 보는 사람들이 다를 수 있다.
공지사항은 열람 기간

NNUM	: 글번호	: N + YYYYMMDD + 0001 : 20
NSUBJECT	: 제목	: 한글, 영문 : 50
NMEMO	: 내용		:		  : 2000
NPHOTO	: 사진		:		  : 100

삭제여부	: DELETEYN			  : 1
입력일	: INSERTDATE	: DATE	: YYYY-MM-DD
수정일	: UPDATEDATE	: DATE	: YYYY-MM-DD

2. 테이블 설계
공지사항 테이블 : MVC_NOTICE
CREATE TABLE MVC_NOTICE(
	 NNUM	VARCHAR2(20)	PRIMARY KEY
	,NSUBJECT	VARCHAR2(50)
	,NMEMO	VARCHAR2(2000)
	,NPHOTO	VARCHAR2(100)
	,DELETEYN	VARCHAR2(1)	NOT NULL
	,INSERTDATE	DATE
	,UPDATEDATE	DATE
);

-- 인덱스
-- SYS_C0011579
SELECT A.INDEX_NAME, A.COLUMN_NAME, A.TABLE_NAME
FROM ALL_IND_COLUMNS A
WHERE a.table_name IN ('MVC_NOTICE');

-- 채번 확인
SELECT /*+ A SYS_C0011579 */
NVL (MAX(SUBSTR(A.NNUM, -4)),0) + 1 MAXNUM
FROM MVC_NOTICE A;


3. 클래스 설계
a.b.c.com.jso.notice

a.b.c.com.jso.notice.controller
	NoticeController
a.b.c.com.jso.notice.service
	NoticeService
		public ArrayList<NoticeVO> noticeSelectAll();
		public ArrayList<NoticeVO> noticeSelect(NoticeVO nvo);
		public int noticeInsert(NoticeVO nvo);
		public int noticeUpdate(NoticeVO nvo);
		public int noticeDelete(NoticeVO nvo);
	NoticeServiceImpl
	
a.b.c.com.jso.notice.dao
	NoticeDAO
		public ArrayList<NoticeVO> noticeSelectAll();
		public ArrayList<NoticeVO> noticeSelect(NoticeVO nvo);
		public int noticeInsert(NoticeVO nvo);
		public int noticeUpdate(NoticeVO nvo);
		public int noticeDelete(NoticeVO nvo);
	NoticeDAOImpl
a.b.c.com.jso.notice.sql
	NoticeSqlMap
		public static String getNoticeChabunQuery() {}
		public static String getNoticeSelectAllQuery() {}
		public static String getNoticeSelectQuery() {}
		public static String getNoticeInsertQuery() {}
		public static String getNoticeUpdateQuery() {}
		
a.b.c.com.jso.notice.vo
	NoticeVO
		private String nnum;
		private String nsubject;
		private String nmemo;
		private String nphoto;
		private String deleteyn;
		private String insertdate;
		private String updatedate;

a.b.c.com.common
	GetNoticeMaxNum
		public static String getMaxNum();
	FileUploadUtil
		public static final String ENCODE_TYPE;
		public static final int SIZE_LIMIT;
		private MultipartRequest m;

		public FileUploadUtil() {}
		public boolean fileUpload(HttpServletRequest hReq, String filePaths) {}
		public boolean fileUpload3(HttpServletRequest hReq, String filePaths
					, int size_limit, String encode_type) {}
		public String getParameter(String s) {}
		public String[] getParameterValues(String s) {}
		public String getFileName(String f) {}
		public ArrayList<String> getFileNames() {}
	CommonUtils
		public static final String NOTICE_IMG_UPLOAD_PATH;
		public static final int NOTICE_IMG_SIZE_LIMIT;
		public static final String NOTICE_IMG_ENCODE;

view : jsp
---------------------------------
/testJso/WebContent/jso/login/
notice.html
	form name = ""noticeWrite"
	name = "nnum"
	name = "nsubject"
	name = "nmemo"
	name = "nphoto"
	input type = "hidden" name = "ISUD_TYPE" value = "I"
	button id = "noticeBtn"
noticeSelectAll.jsp
noticeSelect.jsp
noticeInsert.jsp
noticeUpdate.jsp
noticeDelete.jsp

만드는 순서
1. VO
2. DAO - Service
3. Controller
4. html