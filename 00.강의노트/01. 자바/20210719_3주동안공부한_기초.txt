1.  자바를 개발 할 때 도구 
javac, java, 에디터, 콘솔 & api 

2. javac, java  차이 
javac : 컴파일러 : 자바소스를 바이트코드로 만드는 것
java : 실행엔진 : 바이트코드를 cpu와 통신해서 결과를 만드는 것 

-------------------------------------------------------------

3. 자바 소스의 구성은 
키워드
기호
연산자
식별자
빌트인 클래스 : rt.jar 
사용자정의 클래스 

4. 자바 클래스의 구성원 또는 자원 
클래스 = 변수 + 함수 

5. 패키지 컴파일 명령, 실행
javac -d . 자바소스이름.java
java 패키지명.클래스이름

6. 일반 컴파일 명령, 실행 
javac 자바소스이름.java
java 클래스이름

-------------------------------------------------------------

7. 접근제한자 : Access Modifier : 자원의 접근을 제한 :  class, 변수, 함수 
public protected default private 
public : 다른 패키지에있는 자원 사용가능 
package : 다른 패키지에있는 자원 중 상속한 자원만 사용가능
defalut : 같은 패키지에 있는 자원 사용가능 
private : 클래스안에 있는 자원만 사용가능 


8. static, new, abstract 키워
static : 메모리에 올리는 키워드, 클래스이름으로  사용 
new : 메모리에 올리는 키워드, 참조변수이름 사용
abstract : 추상함수, 추상클래스 

-------------------------------------------------------------

9. 변수 
멤버변수
	상수
	클래스변수
	멤버변수
	전역변수
지역변수 
	지역변수

10. 자바에서 자료형은 
기초자료형 : primitive type
	byte char short int long float double
참조자료형 : reference type 
	클래스, Array, 인터페이스 ....

11. 흐름제어, Flow Conroller
	if, switch, while, do while, for 	

-------------------------------------------------------------

12. 생성자가 하는 역활은 
	멤버 필드를 초기화 한다. 

13. 생성자 오버로딩 
	생성자의 이름이 같고 매개변수가 다른 것 

14. 생성자에서 사용되는 
	 this() : 클래스에 오버로딩된 생성자 호출
                super() : 상속한 클래스에서 생성자 호출 

15. this 키워드 :  자기자신 클래스를 갖는다. 
     super 키워드 


-------------------------------------------------------------

16. void 키워드 :  함수에서 리턴이 없는 경우, return 키워드를 사용할 수 없다.

17. 함수의 종류는 
리턴이 있는 함수 : 리턴형이 있는 함수 
	static 유 : 클래스이름.함수이름()
		매개변수가 있는함수 
		매개변수가 없는함수
	satic 무  : 참조변수 
		매개변수가 있는함수 
		매개변수가 없는함수
리턴이 없는 함수 : void 
	static 유 : 클래스이름.함수이름()
		매개변수가 있는함수 
		매개변수가 없는함수
	satic 무  : 참조변수 
		매개변수가 있는함수 
		매개변수가 없는함수

18. 매개변수 vs 아규먼트 
매개변수 : 함수에서  () 에 선언하는 지역변수 
아규먼트 :  함수를 호출할 때 함수이름 뒤 () 에 선언하는 변수 

-------------------------------------------------------------

19. 클래스의 종류 
일반 클래스 : public class 사용자정의클래스이름 
추상 클래스: public abstract class 사용자정의클래스이름  
인터페이스 클래스: public interface 사용자정의인터페이스클래스이름 
파이날 클래스: public final class 사용자정의클래스이름  

20.  상속에 사용하는 키워드
extends : 클래스 상속 : 단일 상속
implements : 인터페이스 클래스 : 다중 상속

21. 추상함수 만드는 방법 
	abstract 함수이름();

-------------------------------------------------------------







